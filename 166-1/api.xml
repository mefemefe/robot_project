<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220706 06:12:14.693" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220706 06:12:14.860" endtime="20220706 06:12:14.861"/>
</kw>
<status status="PASS" starttime="20220706 06:12:14.859" endtime="20220706 06:12:14.861"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 06:12:14.863" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 06:12:14.863" endtime="20220706 06:12:14.863"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 06:12:14.863" endtime="20220706 06:12:14.864"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:14.865" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220706 06:12:14.864" endtime="20220706 06:12:14.865"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 06:12:15.146" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:14.865" endtime="20220706 06:12:15.146"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:15.146" endtime="20220706 06:12:15.146"/>
</return>
<msg timestamp="20220706 06:12:15.146" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:14.862" endtime="20220706 06:12:15.146"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:15.146" endtime="20220706 06:12:15.146"/>
</return>
<msg timestamp="20220706 06:12:15.146" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:14.862" endtime="20220706 06:12:15.146"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 06:12:15.147" endtime="20220706 06:12:15.152"/>
</kw>
<status status="PASS" starttime="20220706 06:12:15.147" endtime="20220706 06:12:15.152"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:15.156" level="INFO">${url} = boards/62c527be325e968d6a7f69b4</msg>
<status status="PASS" starttime="20220706 06:12:15.154" endtime="20220706 06:12:15.156"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 06:12:15.517" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:15.156" endtime="20220706 06:12:15.517"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:15.517" endtime="20220706 06:12:15.517"/>
</return>
<msg timestamp="20220706 06:12:15.517" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:15.154" endtime="20220706 06:12:15.517"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:15.517" endtime="20220706 06:12:15.518"/>
</return>
<status status="PASS" starttime="20220706 06:12:15.153" endtime="20220706 06:12:15.518"/>
</kw>
<status status="PASS" starttime="20220706 06:12:15.153" endtime="20220706 06:12:15.518"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220706 06:12:14.861" endtime="20220706 06:12:15.518"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 06:12:15.521" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 06:12:15.521" endtime="20220706 06:12:15.521"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 06:12:15.521" endtime="20220706 06:12:15.521"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:15.522" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220706 06:12:15.521" endtime="20220706 06:12:15.522"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 06:12:15.720" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:15.522" endtime="20220706 06:12:15.721"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:15.721" endtime="20220706 06:12:15.721"/>
</return>
<msg timestamp="20220706 06:12:15.721" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:15.520" endtime="20220706 06:12:15.721"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:15.721" endtime="20220706 06:12:15.721"/>
</return>
<msg timestamp="20220706 06:12:15.721" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:15.519" endtime="20220706 06:12:15.721"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 06:12:15.722" endtime="20220706 06:12:15.727"/>
</kw>
<status status="PASS" starttime="20220706 06:12:15.721" endtime="20220706 06:12:15.727"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 06:12:15.729" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 06:12:15.729" endtime="20220706 06:12:15.729"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 06:12:15.729" endtime="20220706 06:12:15.729"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:15.730" level="INFO">${url} = boards/62c527bfdd3cd602829c0bb2</msg>
<status status="PASS" starttime="20220706 06:12:15.729" endtime="20220706 06:12:15.730"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 06:12:15.877" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:15.730" endtime="20220706 06:12:15.877"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:15.877" endtime="20220706 06:12:15.877"/>
</return>
<msg timestamp="20220706 06:12:15.877" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:15.728" endtime="20220706 06:12:15.877"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:15.877" endtime="20220706 06:12:15.877"/>
</return>
<status status="PASS" starttime="20220706 06:12:15.727" endtime="20220706 06:12:15.878"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:15.880" level="INFO">${url} = boards/62c527bfdd3cd602829c0bb2</msg>
<status status="PASS" starttime="20220706 06:12:15.879" endtime="20220706 06:12:15.880"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 06:12:15.976" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:15.880" endtime="20220706 06:12:15.976"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:15.976" endtime="20220706 06:12:15.976"/>
</return>
<msg timestamp="20220706 06:12:15.977" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:15.879" endtime="20220706 06:12:15.977"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:15.977" endtime="20220706 06:12:15.977"/>
</return>
<msg timestamp="20220706 06:12:15.977" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:15.878" endtime="20220706 06:12:15.977"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 06:12:15.978" endtime="20220706 06:12:15.983"/>
</kw>
<status status="PASS" starttime="20220706 06:12:15.977" endtime="20220706 06:12:15.983"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 06:12:15.983" endtime="20220706 06:12:15.984"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:15.986" level="INFO">${url} = boards/62c527bfdd3cd602829c0bb2</msg>
<status status="PASS" starttime="20220706 06:12:15.986" endtime="20220706 06:12:15.987"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 06:12:16.462" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:15.987" endtime="20220706 06:12:16.462"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:16.462" endtime="20220706 06:12:16.462"/>
</return>
<msg timestamp="20220706 06:12:16.462" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:15.985" endtime="20220706 06:12:16.463"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:16.463" endtime="20220706 06:12:16.463"/>
</return>
<status status="PASS" starttime="20220706 06:12:15.984" endtime="20220706 06:12:16.463"/>
</kw>
<status status="PASS" starttime="20220706 06:12:15.984" endtime="20220706 06:12:16.463"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220706 06:12:15.518" endtime="20220706 06:12:16.463"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 06:12:16.466" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 06:12:16.465" endtime="20220706 06:12:16.466"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 06:12:16.466" endtime="20220706 06:12:16.466"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:16.467" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220706 06:12:16.466" endtime="20220706 06:12:16.467"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 06:12:16.706" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:16.467" endtime="20220706 06:12:16.706"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:16.706" endtime="20220706 06:12:16.706"/>
</return>
<msg timestamp="20220706 06:12:16.706" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:16.465" endtime="20220706 06:12:16.706"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:16.706" endtime="20220706 06:12:16.706"/>
</return>
<msg timestamp="20220706 06:12:16.707" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:16.464" endtime="20220706 06:12:16.707"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:16.709" level="INFO">${url} = boards/62c527c00d0d698cc43c58b1</msg>
<status status="PASS" starttime="20220706 06:12:16.709" endtime="20220706 06:12:16.709"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 06:12:17.070" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:16.709" endtime="20220706 06:12:17.070"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:17.070" endtime="20220706 06:12:17.070"/>
</return>
<msg timestamp="20220706 06:12:17.070" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:16.708" endtime="20220706 06:12:17.071"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:17.071" endtime="20220706 06:12:17.071"/>
</return>
<status status="PASS" starttime="20220706 06:12:16.707" endtime="20220706 06:12:17.071"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:17.073" level="INFO">${url} = boards/62c527c00d0d698cc43c58b1</msg>
<status status="PASS" starttime="20220706 06:12:17.073" endtime="20220706 06:12:17.073"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 06:12:17.164" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220706 06:12:17.073" endtime="20220706 06:12:17.164"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:17.164" endtime="20220706 06:12:17.164"/>
</return>
<msg timestamp="20220706 06:12:17.165" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220706 06:12:17.072" endtime="20220706 06:12:17.165"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:17.165" endtime="20220706 06:12:17.165"/>
</return>
<status status="PASS" starttime="20220706 06:12:17.071" endtime="20220706 06:12:17.165"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220706 06:12:16.463" endtime="20220706 06:12:17.165"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 06:12:17.168" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 06:12:17.168" endtime="20220706 06:12:17.168"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 06:12:17.168" endtime="20220706 06:12:17.169"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:17.170" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220706 06:12:17.169" endtime="20220706 06:12:17.170"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 06:12:17.386" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:17.170" endtime="20220706 06:12:17.386"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:17.386" endtime="20220706 06:12:17.386"/>
</return>
<msg timestamp="20220706 06:12:17.386" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:17.167" endtime="20220706 06:12:17.386"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:17.386" endtime="20220706 06:12:17.386"/>
</return>
<msg timestamp="20220706 06:12:17.387" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:17.167" endtime="20220706 06:12:17.387"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 06:12:17.387" endtime="20220706 06:12:17.392"/>
</kw>
<status status="PASS" starttime="20220706 06:12:17.387" endtime="20220706 06:12:17.392"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:17.394" level="INFO">${url} = boards/62c527c1e3cd225f16ac90b6</msg>
<status status="PASS" starttime="20220706 06:12:17.393" endtime="20220706 06:12:17.394"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 06:12:17.492" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:17.394" endtime="20220706 06:12:17.492"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:17.492" endtime="20220706 06:12:17.492"/>
</return>
<msg timestamp="20220706 06:12:17.493" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:17.393" endtime="20220706 06:12:17.493"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:17.493" endtime="20220706 06:12:17.493"/>
</return>
<msg timestamp="20220706 06:12:17.493" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:17.392" endtime="20220706 06:12:17.493"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 06:12:17.494" endtime="20220706 06:12:17.498"/>
</kw>
<status status="PASS" starttime="20220706 06:12:17.493" endtime="20220706 06:12:17.498"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 06:12:17.498" endtime="20220706 06:12:17.499"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:17.502" level="INFO">${url} = boards/62c527c1e3cd225f16ac90b6</msg>
<status status="PASS" starttime="20220706 06:12:17.501" endtime="20220706 06:12:17.502"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 06:12:17.860" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:17.502" endtime="20220706 06:12:17.861"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:17.861" endtime="20220706 06:12:17.861"/>
</return>
<msg timestamp="20220706 06:12:17.861" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:17.501" endtime="20220706 06:12:17.861"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:17.861" endtime="20220706 06:12:17.861"/>
</return>
<status status="PASS" starttime="20220706 06:12:17.500" endtime="20220706 06:12:17.861"/>
</kw>
<status status="PASS" starttime="20220706 06:12:17.499" endtime="20220706 06:12:17.861"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220706 06:12:17.166" endtime="20220706 06:12:17.862"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 06:12:17.865" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 06:12:17.864" endtime="20220706 06:12:17.865"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 06:12:17.865" endtime="20220706 06:12:17.865"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:17.866" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220706 06:12:17.865" endtime="20220706 06:12:17.866"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 06:12:18.080" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:17.866" endtime="20220706 06:12:18.080"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:18.080" endtime="20220706 06:12:18.080"/>
</return>
<msg timestamp="20220706 06:12:18.081" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:17.864" endtime="20220706 06:12:18.081"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:18.081" endtime="20220706 06:12:18.081"/>
</return>
<msg timestamp="20220706 06:12:18.081" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:17.863" endtime="20220706 06:12:18.081"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 06:12:18.082" endtime="20220706 06:12:18.087"/>
</kw>
<status status="PASS" starttime="20220706 06:12:18.081" endtime="20220706 06:12:18.087"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 06:12:18.089" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 06:12:18.089" endtime="20220706 06:12:18.089"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 06:12:18.089" endtime="20220706 06:12:18.089"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:18.090" level="INFO">${url} = boards/62c527c1ade06562d4778775</msg>
<status status="PASS" starttime="20220706 06:12:18.089" endtime="20220706 06:12:18.090"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 06:12:18.226" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:18.090" endtime="20220706 06:12:18.226"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:18.226" endtime="20220706 06:12:18.226"/>
</return>
<msg timestamp="20220706 06:12:18.227" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:18.088" endtime="20220706 06:12:18.227"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:18.227" endtime="20220706 06:12:18.227"/>
</return>
<status status="PASS" starttime="20220706 06:12:18.087" endtime="20220706 06:12:18.227"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:18.229" level="INFO">${url} = boards/62c527c1ade06562d4778775</msg>
<status status="PASS" starttime="20220706 06:12:18.229" endtime="20220706 06:12:18.229"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 06:12:18.328" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:18.229" endtime="20220706 06:12:18.328"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:18.328" endtime="20220706 06:12:18.328"/>
</return>
<msg timestamp="20220706 06:12:18.329" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:18.228" endtime="20220706 06:12:18.329"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:18.329" endtime="20220706 06:12:18.329"/>
</return>
<msg timestamp="20220706 06:12:18.329" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:18.227" endtime="20220706 06:12:18.329"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 06:12:18.329" endtime="20220706 06:12:18.330"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 06:12:18.332" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 06:12:18.332" endtime="20220706 06:12:18.332"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 06:12:18.332" endtime="20220706 06:12:18.333"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:18.333" level="INFO">${url} = boards/62c527c1ade06562d4778775</msg>
<status status="PASS" starttime="20220706 06:12:18.333" endtime="20220706 06:12:18.333"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 06:12:18.483" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:18.333" endtime="20220706 06:12:18.483"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:18.483" endtime="20220706 06:12:18.483"/>
</return>
<msg timestamp="20220706 06:12:18.483" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:18.331" endtime="20220706 06:12:18.483"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:18.483" endtime="20220706 06:12:18.483"/>
</return>
<status status="PASS" starttime="20220706 06:12:18.330" endtime="20220706 06:12:18.483"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:18.486" level="INFO">${url} = boards/62c527c1ade06562d4778775</msg>
<status status="PASS" starttime="20220706 06:12:18.485" endtime="20220706 06:12:18.486"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 06:12:18.592" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:18.486" endtime="20220706 06:12:18.592"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:18.592" endtime="20220706 06:12:18.592"/>
</return>
<msg timestamp="20220706 06:12:18.592" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:18.485" endtime="20220706 06:12:18.592"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:18.592" endtime="20220706 06:12:18.592"/>
</return>
<msg timestamp="20220706 06:12:18.592" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:18.484" endtime="20220706 06:12:18.593"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 06:12:18.593" endtime="20220706 06:12:18.594"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:18.597" level="INFO">${url} = boards/62c527c1ade06562d4778775</msg>
<status status="PASS" starttime="20220706 06:12:18.596" endtime="20220706 06:12:18.597"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 06:12:18.987" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:18.597" endtime="20220706 06:12:18.987"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:18.987" endtime="20220706 06:12:18.987"/>
</return>
<msg timestamp="20220706 06:12:18.988" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:18.595" endtime="20220706 06:12:18.988"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:18.988" endtime="20220706 06:12:18.988"/>
</return>
<status status="PASS" starttime="20220706 06:12:18.594" endtime="20220706 06:12:18.988"/>
</kw>
<status status="PASS" starttime="20220706 06:12:18.594" endtime="20220706 06:12:18.988"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220706 06:12:17.862" endtime="20220706 06:12:18.988"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220706 06:12:18.990" endtime="20220706 06:12:18.991"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220706 06:12:14.721" endtime="20220706 06:12:18.991"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220706 06:12:19.005" endtime="20220706 06:12:19.005"/>
</kw>
<status status="PASS" starttime="20220706 06:12:19.005" endtime="20220706 06:12:19.006"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 06:12:19.007" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 06:12:19.007" endtime="20220706 06:12:19.007"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 06:12:19.007" endtime="20220706 06:12:19.007"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:19.008" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220706 06:12:19.008" endtime="20220706 06:12:19.008"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 06:12:19.245" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:19.009" endtime="20220706 06:12:19.245"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:19.246" endtime="20220706 06:12:19.246"/>
</return>
<msg timestamp="20220706 06:12:19.246" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:19.006" endtime="20220706 06:12:19.246"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:19.246" endtime="20220706 06:12:19.246"/>
</return>
<msg timestamp="20220706 06:12:19.246" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:19.006" endtime="20220706 06:12:19.246"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220706 06:12:19.247" level="INFO">${TEST_SUITE_BOARD_ID} = 62c527c3cac9393201eea039</msg>
<status status="PASS" starttime="20220706 06:12:19.246" endtime="20220706 06:12:19.247"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:19.249" level="INFO">${url} = boards/62c527c3cac9393201eea039/lists/</msg>
<status status="PASS" starttime="20220706 06:12:19.248" endtime="20220706 06:12:19.249"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 06:12:19.356" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:19.249" endtime="20220706 06:12:19.356"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:19.356" endtime="20220706 06:12:19.356"/>
</return>
<msg timestamp="20220706 06:12:19.357" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:19.248" endtime="20220706 06:12:19.357"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:19.357" endtime="20220706 06:12:19.357"/>
</return>
<msg timestamp="20220706 06:12:19.357" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:19.248" endtime="20220706 06:12:19.357"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220706 06:12:19.358" level="INFO">${TEST_SUITE_LIST_ID} = 62c527c3cac9393201eea040</msg>
<status status="PASS" starttime="20220706 06:12:19.357" endtime="20220706 06:12:19.358"/>
</kw>
<status status="PASS" starttime="20220706 06:12:19.006" endtime="20220706 06:12:19.358"/>
</kw>
<status status="PASS" starttime="20220706 06:12:19.004" endtime="20220706 06:12:19.358"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 06:12:19.361" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 06:12:19.361" endtime="20220706 06:12:19.361"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 06:12:19.361" endtime="20220706 06:12:19.361"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:19.362" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220706 06:12:19.361" endtime="20220706 06:12:19.362"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 06:12:19.612" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:19.362" endtime="20220706 06:12:19.612"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:19.612" endtime="20220706 06:12:19.612"/>
</return>
<msg timestamp="20220706 06:12:19.612" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:19.360" endtime="20220706 06:12:19.612"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:19.612" endtime="20220706 06:12:19.612"/>
</return>
<msg timestamp="20220706 06:12:19.612" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:19.359" endtime="20220706 06:12:19.613"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 06:12:19.613" endtime="20220706 06:12:19.619"/>
</kw>
<status status="PASS" starttime="20220706 06:12:19.613" endtime="20220706 06:12:19.620"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 06:12:19.620" endtime="20220706 06:12:19.620"/>
</return>
<msg timestamp="20220706 06:12:19.621" level="INFO">${CARD_ID} = 62c527c3ed0f6a8d6f0e943e</msg>
<status status="PASS" starttime="20220706 06:12:19.620" endtime="20220706 06:12:19.621"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:19.623" level="INFO">${url} = cards/62c527c3ed0f6a8d6f0e943e</msg>
<status status="PASS" starttime="20220706 06:12:19.623" endtime="20220706 06:12:19.623"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 06:12:19.733" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:19.624" endtime="20220706 06:12:19.733"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:19.733" endtime="20220706 06:12:19.733"/>
</return>
<msg timestamp="20220706 06:12:19.733" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:19.622" endtime="20220706 06:12:19.733"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:19.733" endtime="20220706 06:12:19.733"/>
</return>
<msg timestamp="20220706 06:12:19.734" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:19.621" endtime="20220706 06:12:19.734"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 06:12:19.734" endtime="20220706 06:12:19.734"/>
</return>
<msg timestamp="20220706 06:12:19.735" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220706 06:12:19.734" endtime="20220706 06:12:19.735"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 06:12:19.735" endtime="20220706 06:12:19.736"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:19.738" level="INFO">${url} = cards/62c527c3ed0f6a8d6f0e943e</msg>
<status status="PASS" starttime="20220706 06:12:19.737" endtime="20220706 06:12:19.738"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 06:12:19.936" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:19.738" endtime="20220706 06:12:19.936"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:19.936" endtime="20220706 06:12:19.936"/>
</return>
<msg timestamp="20220706 06:12:19.936" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:19.737" endtime="20220706 06:12:19.936"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:19.936" endtime="20220706 06:12:19.936"/>
</return>
<status status="PASS" starttime="20220706 06:12:19.736" endtime="20220706 06:12:19.937"/>
</kw>
<status status="PASS" starttime="20220706 06:12:19.736" endtime="20220706 06:12:19.937"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220706 06:12:19.359" endtime="20220706 06:12:19.937"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 06:12:19.940" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 06:12:19.940" endtime="20220706 06:12:19.940"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 06:12:19.940" endtime="20220706 06:12:19.940"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:19.941" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220706 06:12:19.941" endtime="20220706 06:12:19.941"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 06:12:20.146" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:19.942" endtime="20220706 06:12:20.146"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:20.146" endtime="20220706 06:12:20.146"/>
</return>
<msg timestamp="20220706 06:12:20.147" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:19.939" endtime="20220706 06:12:20.147"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:20.147" endtime="20220706 06:12:20.147"/>
</return>
<msg timestamp="20220706 06:12:20.147" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:19.938" endtime="20220706 06:12:20.147"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 06:12:20.148" endtime="20220706 06:12:20.148"/>
</return>
<msg timestamp="20220706 06:12:20.149" level="INFO">${CARD_ID} = 62c527c4eb06cf474e028152</msg>
<status status="PASS" starttime="20220706 06:12:20.147" endtime="20220706 06:12:20.149"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 06:12:20.151" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 06:12:20.151" endtime="20220706 06:12:20.151"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 06:12:20.151" endtime="20220706 06:12:20.152"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:20.152" level="INFO">${url} = cards/62c527c4eb06cf474e028152</msg>
<status status="PASS" starttime="20220706 06:12:20.152" endtime="20220706 06:12:20.152"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 06:12:20.329" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:20.152" endtime="20220706 06:12:20.329"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:20.329" endtime="20220706 06:12:20.330"/>
</return>
<msg timestamp="20220706 06:12:20.330" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:20.150" endtime="20220706 06:12:20.330"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:20.330" endtime="20220706 06:12:20.330"/>
</return>
<msg timestamp="20220706 06:12:20.330" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:20.149" endtime="20220706 06:12:20.330"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:20.330" endtime="20220706 06:12:20.330"/>
</return>
<status status="PASS" starttime="20220706 06:12:20.149" endtime="20220706 06:12:20.331"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:20.332" level="INFO">${url} = cards/62c527c4eb06cf474e028152</msg>
<status status="PASS" starttime="20220706 06:12:20.332" endtime="20220706 06:12:20.332"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 06:12:20.448" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:20.332" endtime="20220706 06:12:20.449"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:20.449" endtime="20220706 06:12:20.449"/>
</return>
<msg timestamp="20220706 06:12:20.449" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:20.331" endtime="20220706 06:12:20.449"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:20.449" endtime="20220706 06:12:20.449"/>
</return>
<msg timestamp="20220706 06:12:20.449" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:20.331" endtime="20220706 06:12:20.450"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 06:12:20.450" endtime="20220706 06:12:20.450"/>
</return>
<msg timestamp="20220706 06:12:20.451" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220706 06:12:20.450" endtime="20220706 06:12:20.451"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220706 06:12:20.451" endtime="20220706 06:12:20.452"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:20.454" level="INFO">${url} = cards/62c527c4eb06cf474e028152</msg>
<status status="PASS" starttime="20220706 06:12:20.453" endtime="20220706 06:12:20.454"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 06:12:20.653" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:20.454" endtime="20220706 06:12:20.653"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:20.653" endtime="20220706 06:12:20.653"/>
</return>
<msg timestamp="20220706 06:12:20.653" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:20.453" endtime="20220706 06:12:20.653"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:20.654" endtime="20220706 06:12:20.654"/>
</return>
<status status="PASS" starttime="20220706 06:12:20.452" endtime="20220706 06:12:20.654"/>
</kw>
<status status="PASS" starttime="20220706 06:12:20.452" endtime="20220706 06:12:20.654"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220706 06:12:19.937" endtime="20220706 06:12:20.654"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 06:12:20.657" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 06:12:20.657" endtime="20220706 06:12:20.657"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 06:12:20.658" endtime="20220706 06:12:20.658"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:20.659" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220706 06:12:20.658" endtime="20220706 06:12:20.659"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 06:12:20.865" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:20.659" endtime="20220706 06:12:20.865"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:20.865" endtime="20220706 06:12:20.865"/>
</return>
<msg timestamp="20220706 06:12:20.866" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:20.656" endtime="20220706 06:12:20.866"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:20.866" endtime="20220706 06:12:20.866"/>
</return>
<msg timestamp="20220706 06:12:20.866" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:20.656" endtime="20220706 06:12:20.866"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 06:12:20.866" endtime="20220706 06:12:20.867"/>
</return>
<msg timestamp="20220706 06:12:20.867" level="INFO">${CARD_ID} = 62c527c45934d81beaeb5ab9</msg>
<status status="PASS" starttime="20220706 06:12:20.866" endtime="20220706 06:12:20.867"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:20.869" level="INFO">${url} = cards/62c527c45934d81beaeb5ab9</msg>
<status status="PASS" starttime="20220706 06:12:20.869" endtime="20220706 06:12:20.869"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 06:12:21.066" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:20.869" endtime="20220706 06:12:21.066"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:21.066" endtime="20220706 06:12:21.066"/>
</return>
<msg timestamp="20220706 06:12:21.067" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:20.868" endtime="20220706 06:12:21.067"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:21.067" endtime="20220706 06:12:21.067"/>
</return>
<msg timestamp="20220706 06:12:21.067" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:20.867" endtime="20220706 06:12:21.067"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 06:12:21.068" endtime="20220706 06:12:21.070"/>
</kw>
<status status="PASS" starttime="20220706 06:12:21.067" endtime="20220706 06:12:21.070"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:21.071" level="INFO">${url} = cards/62c527c45934d81beaeb5ab9</msg>
<status status="PASS" starttime="20220706 06:12:21.071" endtime="20220706 06:12:21.071"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 06:12:21.165" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220706 06:12:21.071" endtime="20220706 06:12:21.165"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:21.165" endtime="20220706 06:12:21.165"/>
</return>
<msg timestamp="20220706 06:12:21.165" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220706 06:12:21.070" endtime="20220706 06:12:21.166"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:21.166" endtime="20220706 06:12:21.166"/>
</return>
<status status="PASS" starttime="20220706 06:12:21.070" endtime="20220706 06:12:21.166"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220706 06:12:20.654" endtime="20220706 06:12:21.166"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 06:12:21.169" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 06:12:21.169" endtime="20220706 06:12:21.169"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 06:12:21.169" endtime="20220706 06:12:21.169"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:21.170" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220706 06:12:21.170" endtime="20220706 06:12:21.170"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 06:12:21.372" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:21.170" endtime="20220706 06:12:21.372"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:21.372" endtime="20220706 06:12:21.372"/>
</return>
<msg timestamp="20220706 06:12:21.372" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:21.168" endtime="20220706 06:12:21.372"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:21.372" endtime="20220706 06:12:21.373"/>
</return>
<msg timestamp="20220706 06:12:21.373" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:21.167" endtime="20220706 06:12:21.373"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 06:12:21.373" endtime="20220706 06:12:21.373"/>
</return>
<msg timestamp="20220706 06:12:21.374" level="INFO">${CARD_ID} = 62c527c5e70c475b70af2435</msg>
<status status="PASS" starttime="20220706 06:12:21.373" endtime="20220706 06:12:21.374"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 06:12:21.376" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 06:12:21.376" endtime="20220706 06:12:21.376"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 06:12:21.376" endtime="20220706 06:12:21.376"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:21.377" level="INFO">${url} = cards/62c527c5e70c475b70af2435</msg>
<status status="PASS" starttime="20220706 06:12:21.376" endtime="20220706 06:12:21.377"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 06:12:21.574" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:21.377" endtime="20220706 06:12:21.574"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:21.574" endtime="20220706 06:12:21.574"/>
</return>
<msg timestamp="20220706 06:12:21.574" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:21.375" endtime="20220706 06:12:21.574"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:21.574" endtime="20220706 06:12:21.574"/>
</return>
<msg timestamp="20220706 06:12:21.575" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:21.374" endtime="20220706 06:12:21.575"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 06:12:21.575" endtime="20220706 06:12:21.581"/>
</kw>
<status status="PASS" starttime="20220706 06:12:21.575" endtime="20220706 06:12:21.581"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:21.583" level="INFO">${url} = cards/62c527c5e70c475b70af2435</msg>
<status status="PASS" starttime="20220706 06:12:21.582" endtime="20220706 06:12:21.583"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 06:12:21.701" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:21.583" endtime="20220706 06:12:21.701"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:21.701" endtime="20220706 06:12:21.701"/>
</return>
<msg timestamp="20220706 06:12:21.701" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:21.582" endtime="20220706 06:12:21.701"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:21.701" endtime="20220706 06:12:21.701"/>
</return>
<msg timestamp="20220706 06:12:21.702" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:21.581" endtime="20220706 06:12:21.702"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 06:12:21.702" endtime="20220706 06:12:21.702"/>
</return>
<msg timestamp="20220706 06:12:21.703" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220706 06:12:21.702" endtime="20220706 06:12:21.703"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 06:12:21.704" endtime="20220706 06:12:21.704"/>
</return>
<msg timestamp="20220706 06:12:21.705" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220706 06:12:21.703" endtime="20220706 06:12:21.705"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 06:12:21.705" endtime="20220706 06:12:21.705"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 06:12:21.705" endtime="20220706 06:12:21.705"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:21.708" level="INFO">${url} = cards/62c527c5e70c475b70af2435</msg>
<status status="PASS" starttime="20220706 06:12:21.707" endtime="20220706 06:12:21.708"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 06:12:21.912" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:21.708" endtime="20220706 06:12:21.912"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:21.912" endtime="20220706 06:12:21.912"/>
</return>
<msg timestamp="20220706 06:12:21.913" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:21.706" endtime="20220706 06:12:21.913"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:21.913" endtime="20220706 06:12:21.913"/>
</return>
<status status="PASS" starttime="20220706 06:12:21.706" endtime="20220706 06:12:21.913"/>
</kw>
<status status="PASS" starttime="20220706 06:12:21.706" endtime="20220706 06:12:21.913"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220706 06:12:21.167" endtime="20220706 06:12:21.913"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:21.916" level="INFO">${url} = boards/62c527c3cac9393201eea039</msg>
<status status="PASS" starttime="20220706 06:12:21.916" endtime="20220706 06:12:21.916"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 06:12:22.347" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:21.917" endtime="20220706 06:12:22.347"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:22.347" endtime="20220706 06:12:22.348"/>
</return>
<msg timestamp="20220706 06:12:22.348" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:21.915" endtime="20220706 06:12:22.348"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:22.348" endtime="20220706 06:12:22.348"/>
</return>
<status status="PASS" starttime="20220706 06:12:21.915" endtime="20220706 06:12:22.348"/>
</kw>
<status status="PASS" starttime="20220706 06:12:21.914" endtime="20220706 06:12:22.348"/>
</kw>
<status status="PASS" starttime="20220706 06:12:21.914" endtime="20220706 06:12:22.348"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220706 06:12:22.349" endtime="20220706 06:12:22.350"/>
</kw>
<status status="PASS" starttime="20220706 06:12:21.914" endtime="20220706 06:12:22.350"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220706 06:12:18.993" endtime="20220706 06:12:22.350"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220706 06:12:22.366" endtime="20220706 06:12:22.366"/>
</kw>
<status status="PASS" starttime="20220706 06:12:22.366" endtime="20220706 06:12:22.367"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 06:12:22.368" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 06:12:22.368" endtime="20220706 06:12:22.368"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 06:12:22.369" endtime="20220706 06:12:22.369"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:22.370" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220706 06:12:22.369" endtime="20220706 06:12:22.370"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 06:12:22.645" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:22.370" endtime="20220706 06:12:22.645"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:22.645" endtime="20220706 06:12:22.645"/>
</return>
<msg timestamp="20220706 06:12:22.646" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:22.367" endtime="20220706 06:12:22.646"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:22.646" endtime="20220706 06:12:22.646"/>
</return>
<msg timestamp="20220706 06:12:22.646" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:22.367" endtime="20220706 06:12:22.646"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220706 06:12:22.647" level="INFO">${TEST_SUITE_BOARD_ID} = 62c527c6cc03cf773fdaf1df</msg>
<status status="PASS" starttime="20220706 06:12:22.646" endtime="20220706 06:12:22.647"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:22.649" level="INFO">${url} = boards/62c527c6cc03cf773fdaf1df/lists/</msg>
<status status="PASS" starttime="20220706 06:12:22.648" endtime="20220706 06:12:22.649"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 06:12:22.746" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:22.649" endtime="20220706 06:12:22.746"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:22.746" endtime="20220706 06:12:22.746"/>
</return>
<msg timestamp="20220706 06:12:22.746" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:22.648" endtime="20220706 06:12:22.746"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:22.746" endtime="20220706 06:12:22.747"/>
</return>
<msg timestamp="20220706 06:12:22.747" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:22.647" endtime="20220706 06:12:22.747"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220706 06:12:22.748" level="INFO">${TEST_SUITE_LIST_ID} = 62c527c6cc03cf773fdaf1e6</msg>
<status status="PASS" starttime="20220706 06:12:22.747" endtime="20220706 06:12:22.748"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 06:12:22.750" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 06:12:22.749" endtime="20220706 06:12:22.750"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 06:12:22.750" endtime="20220706 06:12:22.750"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:22.751" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220706 06:12:22.750" endtime="20220706 06:12:22.751"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 06:12:22.973" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:22.751" endtime="20220706 06:12:22.973"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:22.973" endtime="20220706 06:12:22.973"/>
</return>
<msg timestamp="20220706 06:12:22.974" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:22.749" endtime="20220706 06:12:22.974"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:22.974" endtime="20220706 06:12:22.974"/>
</return>
<msg timestamp="20220706 06:12:22.974" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:22.748" endtime="20220706 06:12:22.974"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220706 06:12:22.975" level="INFO">${TEST_SUITE_CARD_ID} = 62c527c603e7135e69dd22a7</msg>
<status status="PASS" starttime="20220706 06:12:22.974" endtime="20220706 06:12:22.975"/>
</kw>
<status status="PASS" starttime="20220706 06:12:22.367" endtime="20220706 06:12:22.976"/>
</kw>
<status status="PASS" starttime="20220706 06:12:22.365" endtime="20220706 06:12:22.976"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 06:12:22.978" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 06:12:22.978" endtime="20220706 06:12:22.978"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 06:12:22.978" endtime="20220706 06:12:22.979"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:22.979" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220706 06:12:22.979" endtime="20220706 06:12:22.979"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 06:12:23.135" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:22.980" endtime="20220706 06:12:23.135"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:23.135" endtime="20220706 06:12:23.135"/>
</return>
<msg timestamp="20220706 06:12:23.135" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:22.977" endtime="20220706 06:12:23.135"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:23.136" endtime="20220706 06:12:23.136"/>
</return>
<msg timestamp="20220706 06:12:23.136" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:22.977" endtime="20220706 06:12:23.136"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 06:12:23.136" endtime="20220706 06:12:23.136"/>
</return>
<msg timestamp="20220706 06:12:23.137" level="INFO">${checklist_id} = 62c527c7b6370763335b8f6b</msg>
<status status="PASS" starttime="20220706 06:12:23.136" endtime="20220706 06:12:23.137"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:23.139" level="INFO">${url} = checklists/62c527c7b6370763335b8f6b</msg>
<status status="PASS" starttime="20220706 06:12:23.139" endtime="20220706 06:12:23.139"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 06:12:23.243" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:23.139" endtime="20220706 06:12:23.243"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:23.243" endtime="20220706 06:12:23.243"/>
</return>
<msg timestamp="20220706 06:12:23.243" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:23.138" endtime="20220706 06:12:23.243"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:23.243" endtime="20220706 06:12:23.244"/>
</return>
<msg timestamp="20220706 06:12:23.244" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:23.137" endtime="20220706 06:12:23.244"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 06:12:23.244" endtime="20220706 06:12:23.244"/>
</return>
<msg timestamp="20220706 06:12:23.245" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220706 06:12:23.244" endtime="20220706 06:12:23.245"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 06:12:23.245" endtime="20220706 06:12:23.246"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:23.247" level="INFO">${url} = checklists/62c527c7b6370763335b8f6b</msg>
<status status="PASS" starttime="20220706 06:12:23.247" endtime="20220706 06:12:23.248"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 06:12:23.412" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:23.248" endtime="20220706 06:12:23.412"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:23.412" endtime="20220706 06:12:23.412"/>
</return>
<msg timestamp="20220706 06:12:23.412" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:23.247" endtime="20220706 06:12:23.412"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:23.412" endtime="20220706 06:12:23.412"/>
</return>
<status status="PASS" starttime="20220706 06:12:23.246" endtime="20220706 06:12:23.412"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220706 06:12:22.976" endtime="20220706 06:12:23.413"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 06:12:23.416" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 06:12:23.416" endtime="20220706 06:12:23.416"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 06:12:23.416" endtime="20220706 06:12:23.416"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:23.417" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220706 06:12:23.417" endtime="20220706 06:12:23.417"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 06:12:23.573" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:23.417" endtime="20220706 06:12:23.573"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:23.573" endtime="20220706 06:12:23.573"/>
</return>
<msg timestamp="20220706 06:12:23.574" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:23.415" endtime="20220706 06:12:23.574"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:23.574" endtime="20220706 06:12:23.574"/>
</return>
<msg timestamp="20220706 06:12:23.574" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:23.414" endtime="20220706 06:12:23.574"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 06:12:23.575" endtime="20220706 06:12:23.576"/>
</return>
<msg timestamp="20220706 06:12:23.577" level="INFO">${checklist_id} = 62c527c737e6e5086eac88d3</msg>
<status status="PASS" starttime="20220706 06:12:23.574" endtime="20220706 06:12:23.577"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:23.578" level="INFO">${url} = checklists/62c527c737e6e5086eac88d3</msg>
<status status="PASS" starttime="20220706 06:12:23.578" endtime="20220706 06:12:23.578"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 06:12:23.763" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:23.579" endtime="20220706 06:12:23.763"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:23.763" endtime="20220706 06:12:23.763"/>
</return>
<msg timestamp="20220706 06:12:23.763" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:23.577" endtime="20220706 06:12:23.763"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:23.764" endtime="20220706 06:12:23.764"/>
</return>
<msg timestamp="20220706 06:12:23.764" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:23.577" endtime="20220706 06:12:23.764"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 06:12:23.765" endtime="20220706 06:12:23.767"/>
</kw>
<status status="PASS" starttime="20220706 06:12:23.764" endtime="20220706 06:12:23.767"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:23.768" level="INFO">${url} = checklists/62c527c737e6e5086eac88d3</msg>
<status status="PASS" starttime="20220706 06:12:23.768" endtime="20220706 06:12:23.768"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 06:12:23.859" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220706 06:12:23.768" endtime="20220706 06:12:23.859"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:23.859" endtime="20220706 06:12:23.859"/>
</return>
<msg timestamp="20220706 06:12:23.859" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220706 06:12:23.767" endtime="20220706 06:12:23.859"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:23.859" endtime="20220706 06:12:23.860"/>
</return>
<status status="PASS" starttime="20220706 06:12:23.767" endtime="20220706 06:12:23.860"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220706 06:12:23.413" endtime="20220706 06:12:23.860"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 06:12:23.867" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 06:12:23.864" endtime="20220706 06:12:23.867"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 06:12:23.867" endtime="20220706 06:12:23.867"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:23.868" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220706 06:12:23.867" endtime="20220706 06:12:23.868"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 06:12:24.032" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:23.868" endtime="20220706 06:12:24.032"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:24.032" endtime="20220706 06:12:24.032"/>
</return>
<msg timestamp="20220706 06:12:24.032" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:23.862" endtime="20220706 06:12:24.032"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:24.032" endtime="20220706 06:12:24.032"/>
</return>
<msg timestamp="20220706 06:12:24.032" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:23.861" endtime="20220706 06:12:24.033"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 06:12:24.033" endtime="20220706 06:12:24.033"/>
</return>
<msg timestamp="20220706 06:12:24.034" level="INFO">${checklist_id} = 62c527c7aafbce30221e2fbd</msg>
<status status="PASS" starttime="20220706 06:12:24.033" endtime="20220706 06:12:24.034"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 06:12:24.036" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 06:12:24.035" endtime="20220706 06:12:24.036"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 06:12:24.036" endtime="20220706 06:12:24.036"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:24.037" level="INFO">${url} = checklists/62c527c7aafbce30221e2fbd</msg>
<status status="PASS" starttime="20220706 06:12:24.036" endtime="20220706 06:12:24.037"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 06:12:24.178" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:24.037" endtime="20220706 06:12:24.178"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:24.179" endtime="20220706 06:12:24.179"/>
</return>
<msg timestamp="20220706 06:12:24.179" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:24.035" endtime="20220706 06:12:24.179"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:24.179" endtime="20220706 06:12:24.179"/>
</return>
<msg timestamp="20220706 06:12:24.179" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:24.034" endtime="20220706 06:12:24.179"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:24.181" level="INFO">${url} = checklists/62c527c7aafbce30221e2fbd</msg>
<status status="PASS" starttime="20220706 06:12:24.181" endtime="20220706 06:12:24.181"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 06:12:24.291" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:24.181" endtime="20220706 06:12:24.291"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:24.291" endtime="20220706 06:12:24.291"/>
</return>
<msg timestamp="20220706 06:12:24.291" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:24.180" endtime="20220706 06:12:24.291"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:24.291" endtime="20220706 06:12:24.291"/>
</return>
<msg timestamp="20220706 06:12:24.292" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:24.180" endtime="20220706 06:12:24.292"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 06:12:24.292" endtime="20220706 06:12:24.292"/>
</return>
<msg timestamp="20220706 06:12:24.293" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220706 06:12:24.292" endtime="20220706 06:12:24.293"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 06:12:24.293" endtime="20220706 06:12:24.294"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:24.305" level="INFO">${url} = checklists/62c527c7aafbce30221e2fbd</msg>
<status status="PASS" starttime="20220706 06:12:24.305" endtime="20220706 06:12:24.305"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 06:12:24.475" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:24.305" endtime="20220706 06:12:24.475"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:24.476" endtime="20220706 06:12:24.476"/>
</return>
<msg timestamp="20220706 06:12:24.476" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:24.304" endtime="20220706 06:12:24.476"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:24.476" endtime="20220706 06:12:24.476"/>
</return>
<status status="PASS" starttime="20220706 06:12:24.294" endtime="20220706 06:12:24.476"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220706 06:12:23.860" endtime="20220706 06:12:24.476"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:24.479" level="INFO">${url} = boards/62c527c6cc03cf773fdaf1df</msg>
<status status="PASS" starttime="20220706 06:12:24.479" endtime="20220706 06:12:24.479"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 06:12:24.899" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:24.479" endtime="20220706 06:12:24.899"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:24.899" endtime="20220706 06:12:24.899"/>
</return>
<msg timestamp="20220706 06:12:24.900" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:24.478" endtime="20220706 06:12:24.900"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:24.900" endtime="20220706 06:12:24.900"/>
</return>
<status status="PASS" starttime="20220706 06:12:24.478" endtime="20220706 06:12:24.900"/>
</kw>
<status status="PASS" starttime="20220706 06:12:24.477" endtime="20220706 06:12:24.900"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220706 06:12:24.900" endtime="20220706 06:12:24.902"/>
</kw>
<status status="PASS" starttime="20220706 06:12:24.477" endtime="20220706 06:12:24.902"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220706 06:12:22.351" endtime="20220706 06:12:24.902"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220706 06:12:24.914" endtime="20220706 06:12:24.914"/>
</kw>
<status status="PASS" starttime="20220706 06:12:24.913" endtime="20220706 06:12:24.914"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 06:12:24.915" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 06:12:24.915" endtime="20220706 06:12:24.915"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 06:12:24.916" endtime="20220706 06:12:24.916"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:24.917" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220706 06:12:24.916" endtime="20220706 06:12:24.917"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 06:12:25.179" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:24.917" endtime="20220706 06:12:25.179"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:25.179" endtime="20220706 06:12:25.179"/>
</return>
<msg timestamp="20220706 06:12:25.180" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:24.915" endtime="20220706 06:12:25.180"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:25.180" endtime="20220706 06:12:25.180"/>
</return>
<msg timestamp="20220706 06:12:25.180" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:24.914" endtime="20220706 06:12:25.180"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220706 06:12:25.181" level="INFO">${TEST_SUITE_BOARD_ID} = 62c527c9100d323f0ac61c62</msg>
<status status="PASS" starttime="20220706 06:12:25.180" endtime="20220706 06:12:25.181"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 06:12:25.284" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:25.181" endtime="20220706 06:12:25.284"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220706 06:12:25.285" level="INFO">${TEST_SUITE_LIST_ID} = 62c527c9100d323f0ac61c69</msg>
<status status="PASS" starttime="20220706 06:12:25.284" endtime="20220706 06:12:25.285"/>
</kw>
<status status="PASS" starttime="20220706 06:12:24.914" endtime="20220706 06:12:25.285"/>
</kw>
<status status="PASS" starttime="20220706 06:12:24.913" endtime="20220706 06:12:25.285"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 06:12:25.288" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 06:12:25.287" endtime="20220706 06:12:25.288"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 06:12:25.288" endtime="20220706 06:12:25.288"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:25.289" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220706 06:12:25.288" endtime="20220706 06:12:25.289"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 06:12:25.429" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:25.289" endtime="20220706 06:12:25.429"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:25.429" endtime="20220706 06:12:25.429"/>
</return>
<msg timestamp="20220706 06:12:25.429" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:25.287" endtime="20220706 06:12:25.429"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:25.429" endtime="20220706 06:12:25.429"/>
</return>
<msg timestamp="20220706 06:12:25.430" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:25.286" endtime="20220706 06:12:25.430"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 06:12:25.430" endtime="20220706 06:12:25.432"/>
</kw>
<status status="PASS" starttime="20220706 06:12:25.430" endtime="20220706 06:12:25.432"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 06:12:25.433" endtime="20220706 06:12:25.433"/>
</return>
<msg timestamp="20220706 06:12:25.434" level="INFO">${LABEL_ID} = 62c527c922c497556d7b5f6b</msg>
<status status="PASS" starttime="20220706 06:12:25.433" endtime="20220706 06:12:25.434"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:25.436" level="INFO">${url} = labels/62c527c922c497556d7b5f6b</msg>
<status status="PASS" starttime="20220706 06:12:25.435" endtime="20220706 06:12:25.436"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 06:12:25.538" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:25.436" endtime="20220706 06:12:25.538"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:25.538" endtime="20220706 06:12:25.538"/>
</return>
<msg timestamp="20220706 06:12:25.538" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:25.434" endtime="20220706 06:12:25.538"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:25.538" endtime="20220706 06:12:25.538"/>
</return>
<msg timestamp="20220706 06:12:25.539" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:25.434" endtime="20220706 06:12:25.539"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 06:12:25.539" endtime="20220706 06:12:25.539"/>
</return>
<msg timestamp="20220706 06:12:25.540" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220706 06:12:25.539" endtime="20220706 06:12:25.540"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 06:12:25.541" endtime="20220706 06:12:25.541"/>
</return>
<msg timestamp="20220706 06:12:25.541" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220706 06:12:25.540" endtime="20220706 06:12:25.541"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 06:12:25.542" endtime="20220706 06:12:25.542"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 06:12:25.542" endtime="20220706 06:12:25.543"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:25.545" level="INFO">${url} = labels/62c527c922c497556d7b5f6b</msg>
<status status="PASS" starttime="20220706 06:12:25.544" endtime="20220706 06:12:25.545"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 06:12:25.699" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:25.545" endtime="20220706 06:12:25.699"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:25.699" endtime="20220706 06:12:25.699"/>
</return>
<msg timestamp="20220706 06:12:25.699" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:25.544" endtime="20220706 06:12:25.699"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:25.699" endtime="20220706 06:12:25.699"/>
</return>
<status status="PASS" starttime="20220706 06:12:25.543" endtime="20220706 06:12:25.700"/>
</kw>
<status status="PASS" starttime="20220706 06:12:25.543" endtime="20220706 06:12:25.700"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220706 06:12:25.285" endtime="20220706 06:12:25.700"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 06:12:25.702" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 06:12:25.702" endtime="20220706 06:12:25.703"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 06:12:25.703" endtime="20220706 06:12:25.703"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:25.704" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220706 06:12:25.703" endtime="20220706 06:12:25.704"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 06:12:25.837" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:25.704" endtime="20220706 06:12:25.837"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:25.837" endtime="20220706 06:12:25.837"/>
</return>
<msg timestamp="20220706 06:12:25.838" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:25.702" endtime="20220706 06:12:25.838"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:25.838" endtime="20220706 06:12:25.838"/>
</return>
<msg timestamp="20220706 06:12:25.838" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:25.701" endtime="20220706 06:12:25.838"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 06:12:25.839" endtime="20220706 06:12:25.841"/>
</kw>
<status status="PASS" starttime="20220706 06:12:25.838" endtime="20220706 06:12:25.841"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 06:12:25.841" endtime="20220706 06:12:25.842"/>
</return>
<msg timestamp="20220706 06:12:25.842" level="INFO">${LABEL_ID} = 62c527c9a6f28a5ee11687b6</msg>
<status status="PASS" starttime="20220706 06:12:25.841" endtime="20220706 06:12:25.842"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 06:12:25.844" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 06:12:25.843" endtime="20220706 06:12:25.844"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 06:12:25.844" endtime="20220706 06:12:25.844"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:25.845" level="INFO">${url} = labels/62c527c9a6f28a5ee11687b6</msg>
<status status="PASS" starttime="20220706 06:12:25.844" endtime="20220706 06:12:25.845"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 06:12:25.987" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:25.845" endtime="20220706 06:12:25.987"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:25.987" endtime="20220706 06:12:25.988"/>
</return>
<msg timestamp="20220706 06:12:25.988" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:25.843" endtime="20220706 06:12:25.988"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:25.988" endtime="20220706 06:12:25.988"/>
</return>
<msg timestamp="20220706 06:12:25.988" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:25.842" endtime="20220706 06:12:25.988"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 06:12:25.989" endtime="20220706 06:12:25.989"/>
</return>
<msg timestamp="20220706 06:12:25.990" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220706 06:12:25.988" endtime="20220706 06:12:25.990"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 06:12:25.990" endtime="20220706 06:12:25.990"/>
</return>
<msg timestamp="20220706 06:12:25.991" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220706 06:12:25.990" endtime="20220706 06:12:25.991"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 06:12:25.991" endtime="20220706 06:12:25.992"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 06:12:25.992" endtime="20220706 06:12:25.992"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:25.994" level="INFO">${url} = labels/62c527c9a6f28a5ee11687b6</msg>
<status status="PASS" starttime="20220706 06:12:25.994" endtime="20220706 06:12:25.994"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 06:12:26.147" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:25.994" endtime="20220706 06:12:26.147"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:26.147" endtime="20220706 06:12:26.147"/>
</return>
<msg timestamp="20220706 06:12:26.147" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:25.993" endtime="20220706 06:12:26.147"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:26.147" endtime="20220706 06:12:26.147"/>
</return>
<status status="PASS" starttime="20220706 06:12:25.993" endtime="20220706 06:12:26.147"/>
</kw>
<status status="PASS" starttime="20220706 06:12:25.992" endtime="20220706 06:12:26.147"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220706 06:12:25.700" endtime="20220706 06:12:26.148"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 06:12:26.150" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 06:12:26.150" endtime="20220706 06:12:26.151"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 06:12:26.151" endtime="20220706 06:12:26.151"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:26.152" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220706 06:12:26.151" endtime="20220706 06:12:26.152"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 06:12:26.291" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:26.152" endtime="20220706 06:12:26.291"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:26.291" endtime="20220706 06:12:26.291"/>
</return>
<msg timestamp="20220706 06:12:26.291" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:26.150" endtime="20220706 06:12:26.291"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:26.291" endtime="20220706 06:12:26.291"/>
</return>
<msg timestamp="20220706 06:12:26.292" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:26.149" endtime="20220706 06:12:26.292"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 06:12:26.292" endtime="20220706 06:12:26.292"/>
</return>
<msg timestamp="20220706 06:12:26.293" level="INFO">${LABEL_ID} = 62c527ca3e46996b60d93934</msg>
<status status="PASS" starttime="20220706 06:12:26.292" endtime="20220706 06:12:26.293"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:26.295" level="INFO">${url} = labels/62c527ca3e46996b60d93934</msg>
<status status="PASS" starttime="20220706 06:12:26.295" endtime="20220706 06:12:26.295"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 06:12:26.461" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:26.295" endtime="20220706 06:12:26.461"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:26.461" endtime="20220706 06:12:26.461"/>
</return>
<msg timestamp="20220706 06:12:26.461" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:26.294" endtime="20220706 06:12:26.461"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:26.461" endtime="20220706 06:12:26.461"/>
</return>
<status status="PASS" starttime="20220706 06:12:26.294" endtime="20220706 06:12:26.462"/>
</kw>
<status status="PASS" starttime="20220706 06:12:26.293" endtime="20220706 06:12:26.462"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:26.463" level="INFO">${url} = labels/62c527ca3e46996b60d93934</msg>
<status status="PASS" starttime="20220706 06:12:26.463" endtime="20220706 06:12:26.463"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 06:12:26.551" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220706 06:12:26.463" endtime="20220706 06:12:26.551"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:26.552" endtime="20220706 06:12:26.552"/>
</return>
<msg timestamp="20220706 06:12:26.552" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220706 06:12:26.462" endtime="20220706 06:12:26.552"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:26.552" endtime="20220706 06:12:26.552"/>
</return>
<status status="PASS" starttime="20220706 06:12:26.462" endtime="20220706 06:12:26.552"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220706 06:12:26.148" endtime="20220706 06:12:26.552"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:26.556" level="INFO">${url} = boards/62c527c9100d323f0ac61c62</msg>
<status status="PASS" starttime="20220706 06:12:26.555" endtime="20220706 06:12:26.556"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 06:12:26.934" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:26.556" endtime="20220706 06:12:26.934"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:26.934" endtime="20220706 06:12:26.934"/>
</return>
<msg timestamp="20220706 06:12:26.935" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:26.555" endtime="20220706 06:12:26.935"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:26.935" endtime="20220706 06:12:26.935"/>
</return>
<status status="PASS" starttime="20220706 06:12:26.554" endtime="20220706 06:12:26.935"/>
</kw>
<status status="PASS" starttime="20220706 06:12:26.554" endtime="20220706 06:12:26.935"/>
</kw>
<status status="PASS" starttime="20220706 06:12:26.553" endtime="20220706 06:12:26.935"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220706 06:12:26.935" endtime="20220706 06:12:26.936"/>
</kw>
<status status="PASS" starttime="20220706 06:12:26.553" endtime="20220706 06:12:26.937"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220706 06:12:24.903" endtime="20220706 06:12:26.937"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220706 06:12:26.948" endtime="20220706 06:12:26.949"/>
</kw>
<status status="PASS" starttime="20220706 06:12:26.948" endtime="20220706 06:12:26.949"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 06:12:26.951" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 06:12:26.950" endtime="20220706 06:12:26.951"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 06:12:26.951" endtime="20220706 06:12:26.951"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:26.952" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220706 06:12:26.951" endtime="20220706 06:12:26.952"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 06:12:27.172" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:26.952" endtime="20220706 06:12:27.172"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:27.172" endtime="20220706 06:12:27.172"/>
</return>
<msg timestamp="20220706 06:12:27.173" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:26.950" endtime="20220706 06:12:27.173"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:27.173" endtime="20220706 06:12:27.173"/>
</return>
<msg timestamp="20220706 06:12:27.173" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:26.949" endtime="20220706 06:12:27.173"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220706 06:12:27.175" level="INFO">${TEST_SUITE_BOARD_ID} = 62c527cb3e4b478cb8ac68fe</msg>
<status status="PASS" starttime="20220706 06:12:27.174" endtime="20220706 06:12:27.175"/>
</kw>
<status status="PASS" starttime="20220706 06:12:27.173" endtime="20220706 06:12:27.175"/>
</kw>
<status status="PASS" starttime="20220706 06:12:26.949" endtime="20220706 06:12:27.175"/>
</kw>
<status status="PASS" starttime="20220706 06:12:26.948" endtime="20220706 06:12:27.175"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 06:12:27.177" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 06:12:27.177" endtime="20220706 06:12:27.177"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 06:12:27.177" endtime="20220706 06:12:27.178"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:27.179" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220706 06:12:27.178" endtime="20220706 06:12:27.179"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 06:12:27.338" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:27.179" endtime="20220706 06:12:27.338"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:27.338" endtime="20220706 06:12:27.338"/>
</return>
<msg timestamp="20220706 06:12:27.338" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:27.176" endtime="20220706 06:12:27.338"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:27.338" endtime="20220706 06:12:27.338"/>
</return>
<msg timestamp="20220706 06:12:27.339" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:27.176" endtime="20220706 06:12:27.339"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 06:12:27.339" endtime="20220706 06:12:27.342"/>
</kw>
<status status="PASS" starttime="20220706 06:12:27.339" endtime="20220706 06:12:27.342"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220706 06:12:27.175" endtime="20220706 06:12:27.342"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 06:12:27.345" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 06:12:27.344" endtime="20220706 06:12:27.345"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 06:12:27.345" endtime="20220706 06:12:27.345"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:27.346" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220706 06:12:27.345" endtime="20220706 06:12:27.346"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 06:12:27.490" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:27.346" endtime="20220706 06:12:27.491"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:27.491" endtime="20220706 06:12:27.491"/>
</return>
<msg timestamp="20220706 06:12:27.491" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:27.344" endtime="20220706 06:12:27.491"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:27.491" endtime="20220706 06:12:27.491"/>
</return>
<msg timestamp="20220706 06:12:27.491" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:27.343" endtime="20220706 06:12:27.491"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 06:12:27.492" endtime="20220706 06:12:27.494"/>
</kw>
<status status="PASS" starttime="20220706 06:12:27.492" endtime="20220706 06:12:27.494"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 06:12:27.496" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 06:12:27.496" endtime="20220706 06:12:27.496"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 06:12:27.496" endtime="20220706 06:12:27.497"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:27.497" level="INFO">${url} = lists/62c527cb241632316fbb3759</msg>
<status status="PASS" starttime="20220706 06:12:27.497" endtime="20220706 06:12:27.497"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 06:12:27.634" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:27.497" endtime="20220706 06:12:27.634"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:27.634" endtime="20220706 06:12:27.634"/>
</return>
<msg timestamp="20220706 06:12:27.635" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:27.495" endtime="20220706 06:12:27.635"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:27.635" endtime="20220706 06:12:27.635"/>
</return>
<status status="PASS" starttime="20220706 06:12:27.494" endtime="20220706 06:12:27.635"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:27.637" level="INFO">${url} = lists/62c527cb241632316fbb3759</msg>
<status status="PASS" starttime="20220706 06:12:27.637" endtime="20220706 06:12:27.637"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 06:12:27.737" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:27.637" endtime="20220706 06:12:27.737"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:27.737" endtime="20220706 06:12:27.737"/>
</return>
<msg timestamp="20220706 06:12:27.737" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:27.636" endtime="20220706 06:12:27.737"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:27.737" endtime="20220706 06:12:27.737"/>
</return>
<msg timestamp="20220706 06:12:27.738" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:27.635" endtime="20220706 06:12:27.738"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 06:12:27.738" endtime="20220706 06:12:27.740"/>
</kw>
<status status="PASS" starttime="20220706 06:12:27.738" endtime="20220706 06:12:27.740"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 06:12:27.740" endtime="20220706 06:12:27.741"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220706 06:12:27.342" endtime="20220706 06:12:27.741"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 06:12:27.744" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 06:12:27.743" endtime="20220706 06:12:27.744"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 06:12:27.744" endtime="20220706 06:12:27.745"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:27.746" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220706 06:12:27.745" endtime="20220706 06:12:27.746"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 06:12:28.071" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:27.746" endtime="20220706 06:12:28.071"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:28.071" endtime="20220706 06:12:28.071"/>
</return>
<msg timestamp="20220706 06:12:28.071" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:27.743" endtime="20220706 06:12:28.071"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:28.071" endtime="20220706 06:12:28.071"/>
</return>
<msg timestamp="20220706 06:12:28.072" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:27.742" endtime="20220706 06:12:28.072"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 06:12:28.074" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 06:12:28.074" endtime="20220706 06:12:28.074"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 06:12:28.074" endtime="20220706 06:12:28.074"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:28.075" level="INFO">${url} = lists/62c527cce7153b5df8935da3/closed</msg>
<status status="PASS" starttime="20220706 06:12:28.074" endtime="20220706 06:12:28.075"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 06:12:28.212" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:28.075" endtime="20220706 06:12:28.212"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:28.212" endtime="20220706 06:12:28.212"/>
</return>
<msg timestamp="20220706 06:12:28.213" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:28.073" endtime="20220706 06:12:28.213"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:28.213" endtime="20220706 06:12:28.213"/>
</return>
<status status="PASS" starttime="20220706 06:12:28.072" endtime="20220706 06:12:28.213"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:28.215" level="INFO">${url} = lists/62c527cce7153b5df8935da3</msg>
<status status="PASS" starttime="20220706 06:12:28.215" endtime="20220706 06:12:28.215"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 06:12:28.317" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:28.215" endtime="20220706 06:12:28.317"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:28.318" endtime="20220706 06:12:28.318"/>
</return>
<msg timestamp="20220706 06:12:28.318" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:28.214" endtime="20220706 06:12:28.318"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:28.318" endtime="20220706 06:12:28.318"/>
</return>
<msg timestamp="20220706 06:12:28.318" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:28.213" endtime="20220706 06:12:28.318"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220706 06:12:28.318" endtime="20220706 06:12:28.319"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220706 06:12:27.742" endtime="20220706 06:12:28.320"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 06:12:28.323" level="INFO">${url} = boards/62c527cb3e4b478cb8ac68fe</msg>
<status status="PASS" starttime="20220706 06:12:28.322" endtime="20220706 06:12:28.323"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 06:12:28.772" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:28.323" endtime="20220706 06:12:28.772"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:28.772" endtime="20220706 06:12:28.772"/>
</return>
<msg timestamp="20220706 06:12:28.772" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 06:12:28.322" endtime="20220706 06:12:28.772"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 06:12:28.773" endtime="20220706 06:12:28.773"/>
</return>
<status status="PASS" starttime="20220706 06:12:28.321" endtime="20220706 06:12:28.773"/>
</kw>
<status status="PASS" starttime="20220706 06:12:28.321" endtime="20220706 06:12:28.773"/>
</kw>
<status status="PASS" starttime="20220706 06:12:28.321" endtime="20220706 06:12:28.773"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220706 06:12:28.773" endtime="20220706 06:12:28.774"/>
</kw>
<status status="PASS" starttime="20220706 06:12:28.320" endtime="20220706 06:12:28.774"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220706 06:12:26.938" endtime="20220706 06:12:28.774"/>
</suite>
<status status="PASS" starttime="20220706 06:12:14.719" endtime="20220706 06:12:28.777"/>
</suite>
<status status="PASS" starttime="20220706 06:12:14.694" endtime="20220706 06:12:28.779"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
